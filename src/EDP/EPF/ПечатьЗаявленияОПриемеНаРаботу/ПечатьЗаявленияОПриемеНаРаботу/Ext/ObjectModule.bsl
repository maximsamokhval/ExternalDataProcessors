#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Интерфейс для регистрации обработки.
// Вызывается при добавлении обработки в справочник "ВнешниеОбработки"
//
// Возвращаемое значение:
// Структура:
// Вид - строка - возможные значения:	"ДополнительнаяОбработка"
//										"ДополнительныйОтчет"
//										"ЗаполнениеОбъекта"
//										"Отчет"
//										"ПечатнаяФорма"
//										"СозданиеСвязанныхОбъектов"
//
// Назначение - массив строк имен объектов метаданных в формате:
//			<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]
//			Например, "Документ.СчетЗаказ" или "Справочник.*"
//			Прим. параметр имеет смысл только для назначаемых обработок
//
// Наименование - строка - наименование обработки, которым будет заполнено
//						наименование справочника по умолчанию - краткая строка для
//						идентификации обработки администратором
//
// Версия - строка - версия обработки в формате <старший номер>.<младший номер>
//					используется при загрузке обработок в информационную базу
// БезопасныйРежим – Булево – Если истина, обработка будет запущена в безопасном режиме.
//							Более подбробная информация в справке.
//
// Информация - Строка- краткая информация по обработке, описание обработки
//
// ВерсияБСП - Строка - Минимальная версия БСП, на которую рассчитывает код
// дополнительной обработки. Номер версии БСП задается в формате «РР.ПП.ВВ.СС»
// (РР – старший номер редакции; ПП – младший номер ре-дакции; ВВ – номер версии; СС – номер сборки).
//
// Команды - ТаблицаЗначений - команды, поставляемые обработкой, одная строка таблицы соотвествует
//							одной команде
//				колонки: 
//				 - Представление - строка - представление команды конечному пользователю
//				 - Идентификатор - строка - идентефикатор команды. В случае печатных форм
//											перечисление через запятую списка макетов
//				 - Использование - строка - варианты запуска обработки:
//						"ОткрытиеФормы" - открыть форму обработки
//						"ВызовКлиентскогоМетода" - вызов клиентского экспортного метода из формы обработки
//						"ВызовСерверногоМетода" - вызов серверного экспортного метода из модуля объекта обработки
//				 - ПоказыватьОповещение – Булево – если Истина, требуется оказывать оповещение при начале
//								и при окончании запуска обработки. Прим. Имеет смысл только
//								при запуске обработки без открытия формы.
//				 - Модификатор – строка - для печатных форм MXL, которые требуется
//										отображать в форме ПечатьДокументов подсистемы Печать
//										требуется установить как "ПечатьMXL"
//
Функция СведенияОВнешнейОбработке() Экспорт
  
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //Варианты: "ДополнительнаяОбработка", "ДополнительныйОтчет", "ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов" 
	
	МассивНазначений = Новый Массив();
	МассивНазначений.Добавить("Документ.ПриемНаРаботу");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Наименование", НСтр("ru = 'Заявление о приёме на работу (внеш.)'; uk = 'Заявление о приёме на работу (внеш.)'"));
	ПараметрыРегистрации.Вставить("Версия", "1.1"); //например: "1.0"
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина); //Варианты: Истина, Ложь
	ПараметрыРегистрации.Вставить("Информация", "Внешняя печатная форма");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "2.2.1.4");// не ниже какой версии БСП подерживается обработка
  
  ТаблицаКоманд = ПолучитьТаблицуКоманд();

  ДобавитьКоманду(ТаблицаКоманд,
	  НСтр("ru = 'Заявление о приёме на работу (внеш.)'; uk = 'Заявление о приёме на работу (внеш.)'") ,//для отображения пользователю
	  "Заявление о приеме на работу",    //можно использовать для подмены поставляемой печатной формы
	  "ВызовСерверногоМетода",  //Использование.  Варианты: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"   
	  Ложь,//Показывать оповещение. Варианты Истина, Ложь 
	  "ПечатьMXL",//Модификатор 
	  ""); //Строка с идентификаторами заменяемых внутренних печатных форм. Например "Счет,Заказ"


  ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

  Возврат ПараметрыРегистрации;

КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода = Неопределено)  экспорт 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявление о приеме на работу") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Заявление о приеме на работу", //тот же - что и в функции "СведенияОВнешнейОбработке"! 
			 НСтр("ru = 'Заявление о приёме на работу (внеш.)'; uk = 'Заявление о приёме на работу (внеш.)'"), 
			СформироватьПечатнуюФормуЗаявленияОПриеме(МассивОбъектов, ОбъектыПечати)//исполняющая функция (в этом же модуле)
			);
	КонецЕсли;
	
	
КонецПроцедуры				

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьТаблицуКоманд()

  Команды = Новый ТаблицаЗначений;
  Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
  Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("ЗаменяемыеКоманды", Новый ОписаниеТипов("Строка"));
  
  Возврат Команды;

КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "",ЗаменяемыеКоманды = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	НоваяКоманда.ЗаменяемыеКоманды = ЗаменяемыеКоманды;
	
КонецПроцедуры

//ФОРМИРОВАНИЕ ПЕЧАТНОЙ ФОРМЫ

Функция СформироватьПечатнуюФормуЗаявленияОПриеме(МассивОбъектов, ОбъектыПечати)	
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПараметрыПечати_ЗаявлениеОПриемеНаРаботу_";	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Защита = Истина;
	
	Макет = ПолучитьМакет("ПФ_MXL_Заявление");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемНаРаботу.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
	|	ПриемНаРаботу.Ссылка КАК Ссылка,
	|	ПриемНаРаботу.Дата КАК ДатаДокумента,
	|	ПриемНаРаботу.Организация КАК Организация,
	|	ПриемНаРаботу.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПриемНаРаботу.Должность.Представление КАК Должность,
	|	ПриемНаРаботу.ДатаПриема КАК ДатаПриема,
	|	ЕСТЬNULL(ИсточникОтвественныеЛица.ФизическоеЛицо.ФИО, """") КАК ФИОДиректора,
	|	ПриемНаРаботу.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО
	|ИЗ
	|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				,
	|				Должность = &Должность
	|					И ОтветственноеЛицо = &ОтветственноеЛицо) КАК ИсточникОтвественныеЛица
	|		ПО ПриемНаРаботу.Организация = ИсточникОтвественныеЛица.СтруктурнаяЕдиница
	|ГДЕ
	|	ПриемНаРаботу.Ссылка В(&МассивОбъектов)";
	
	запрос.УстановитьПараметр("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Должность", ДолжностьДиректор()); 
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();

	ВставлятьРазделительСтраниц = Ложь;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 		
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Область_Заявление = Макет.ПолучитьОбласть("Заявление");
		Область_Заявление.Параметры.Заполнить(ВыборкаДетальныеЗаписи);

		СтруктураФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(
			ВыборкаДетальныеЗаписи.Организация,
			ВыборкаДетальныеЗаписи.ФизическоеЛицо,
			ТекущаяДатаСеанса(),
			Ложь);

		АдресПрописки = КонтактнаяИнформацияОбъекта(
			ВыборкаДетальныеЗаписи.ФизическоеЛицо,
		    Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
			
		ТелефонСотрудника = КонтактнаяИнформацияОбъекта(
			ВыборкаДетальныеЗаписи.ФизическоеЛицо,
		    Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица);
			
		//Область_Заявление.Параметры.КодПоДРФО 			= ВыборкаДетальныеЗаписи.КодПоДРФО;	
		Область_Заявление.Параметры.Паспорт 			= СтруктураФизЛица.ПредставлениеДокумента;	
		Область_Заявление.Параметры.ТелефонСотрудника 	= ТелефонСотрудника;
		Область_Заявление.Параметры.АдресПрописки 		= АдресПрописки;	
		
		Область_Заявление.Параметры.ФИОСотрудника 		= СклонениеПредставленийОбъектов.ПросклонятьПредставление(
			СтруктураФизЛица.Представление, 2);
			
		Область_Заявление.Параметры.ДатаДокумента 		= ФорматДаты(ВыборкаДетальныеЗаписи.ДатаДокумента);
		Область_Заявление.Параметры.ДатаПриемаНаРаботу 	= ФорматДаты(ВыборкаДетальныеЗаписи.ДатаПриема);
		
		ТабДок.Присоединить(Область_Заявление);
		
		ВставлятьРазделительСтраниц = Истина;
		//подключимся к общ механизму обл печати
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДетальныеЗаписи.Ссылка);
		
	КонецЦикла; //перебора массива объектов

	Возврат ТабДок;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДолжностьДиректор()
	
	Возврат Справочники.Должности.НайтиПоРеквизиту("КодКП", "1210.1");
	
КонецФункции

Функция ФорматДаты(Знач Дата)
	
	Возврат Формат(Дата,"ДФ=dd.MM.yyyy");
	
КонецФункции

Функция КонтактнаяИнформацияОбъекта(Знач ФизическоеЛицо, Знач ВидКонтактнойИнформации);
	
	ЗначениеПоУмолчанию = "";
	
	КонтактнаяИнформацияОбъекта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			ФизическоеЛицо,
			ВидКонтактнойИнформации,,
			Ложь);

	Если ТипЗнч(КонтактнаяИнформацияОбъекта) = Тип("ТаблицаЗначений") И КонтактнаяИнформацияОбъекта.Количество() > 0 Тогда
		
		ЗначениеПоУмолчанию = КонтактнаяИнформацияОбъекта[0].Представление;
		
	КонецЕсли; 
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти
